spring:
  application:
    name: service-client

  kafka:
    producer:
      valueSerializer: com.leesin.kafka.ObjectSerialzable
    #provider不需要group 但是consumer需要
    consumer:
      groupId: gupao-group
      valueDeserializer: com.leesin.kafka.ObjectDeserializer

  cloud:
    # zookeeper 默认profile关闭自动注册
    zookeeper:
      enabled: false
    stream:
      bindings:
        #channel
        person-source:
          distination: gupao
        #channel
        person-sink:
          #topic
          distination: gupao
          #group
          group: gupao-group

  autoconfigure:
    exclude : org.springframework.cloud.consul.serviceregistry.ConsulAutoServiceRegistrationAutoConfiguration




    # consule 默认profile自动关闭
#    consul:
#      enabled: false # Consul 服务发现与注册失效（默认）

# eureka 默认profile关闭自动注册
eureka:
  client:
    enabled: false

server:
  port: 8889 #随机端口  会随机找一个本地可用的端口

--- # Profile For Eureka
spring:
  profiles: eureka
  # Eureka 客户端配置
eureka:
  server: # 官方不存在的配置（自定义配置）
    host: 127.0.0.1
    port: 12345
  client:
    enabled: true
    serviceUrl:
      defaultZone: http://${eureka.server.host}:${eureka.server.port}/eureka
    registryFetchIntervalSeconds: 5 #5s轮询一次
  instance:
    instanceId: ${spring.application.name}:${server.port}

--- # Profile For zookeeper
spring:
  profiles: zookeeper
  cloud:
    zookeeper:
      enabled: true
      connectString: 120.78.190.230:2181


--- # Profile For consul
#spring:
#  profiles: consul
#  cloud:
#    consul:
#      enable: true
#      ipAddress: 127.0.0.1
#      port: 8500

